{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","img/image.png","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xd","md","cs","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchdata","country","a","changebleurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchcountries","countries","name","CountryPicker","handlecountrychange","useState","fetchedCountries","setfetchedCountries","useEffect","fetchAPI","FormControl","Styles","NativeSelect","defaultValue","onChange","e","target","index","Chart","setdailydata","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","App","state","fetchedData","setState","this","img","Src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccf80ae7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__yzgRc\",\"card\":\"Cards_card__pzaDF\",\"infected\":\"Cards_infected__3k8b8\",\"recovered\":\"Cards_recovered__29R2L\",\"deaths\":\"Cards_deaths__6CRxo\"};","import React from 'react';\r\nimport {Card, CardContent ,Typography , Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport Countup from 'react-countup';\r\nimport cs from 'classnames';\r\n\r\nconst Cards =({data:{confirmed , recovered , deaths, lastUpdate}})=>{\r\nif(!confirmed){\r\n    return \"loading...\"\r\n}\r\n    return(\r\n        <div className = {styles.container}>\r\n        <Grid container spacing ={3} justify = \"center\">\r\n            <Grid item component= {Card} xd ={12} md ={3} className = {cs(styles.Card ,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color = \"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant='h5'><Countup start={0} end={confirmed.value} duration ={2} separator=\",\"/></Typography>\r\n                    <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant= 'body2'>Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component= {Card} xd ={12} md ={3} className = {cs(styles.Card ,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color = \"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant='h5'><Countup start={0} end={recovered.value} duration ={2} separator=\",\"/> </Typography>\r\n                    <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant= 'body2'>Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component= {Card} xd ={12} md ={3} className = {cs(styles.Card ,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color = \"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant='h5'><Countup start={0} end={deaths.value} duration ={2} separator=\",\"/></Typography>\r\n                    <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant= 'body2'>Number of deaths caused by    COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards;","import axios from 'axios'\r\n// Card function\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchdata = async (country) => {\r\n    let changebleurl = url;\r\n    if(country){\r\n        changebleurl  = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changebleurl)\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n// chart function\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n\r\n        }));\r\n        return modifiedData;\r\n\r\n\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n// countrypicker \r\n\r\nexport const fetchcountries = async () =>{\r\n    try {\r\n        const { data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country)=>country.name)\r\n\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState , useEffect} from 'react';\r\nimport { NativeSelect , FormControl, StylesProvider} from '@material-ui/core'\r\nimport Styles from './CountryPicker.module.css';\r\nimport  {fetchcountries} from '../../api'\r\nconst CountryPicker =({handlecountrychange})=>{\r\n    \r\n        const [fetchedCountries , setfetchedCountries] = useState([])\r\n        useEffect(()=>{\r\n            const fetchAPI = async () =>{\r\n                setfetchedCountries(await fetchcountries())\r\n            }\r\n            fetchAPI();\r\n        },[setfetchedCountries]);\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <FormControl className = {Styles.FormControl}>\r\n            <NativeSelect defaultValue = \"\"  onChange = {(e)=>handlecountrychange(e.target.value)}>\r\n                <option value = \"\">Global</option>\r\n                {fetchedCountries.map((country ,index)=><option key = {index} value = {country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data: {confirmed,deaths,recovered} ,country}) => {\r\n    const [ dailyData, setdailydata ] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setdailydata(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    } , []);\r\n    const lineChart = (\r\n        dailyData.length\r\n            ?\r\n            (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255,0,0,0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n\r\n\r\n    const barchart = (\r\n        confirmed ?\r\n        (\r\n            <Bar data = {{\r\n                labels  : ['Infected','Recovered' , 'Deaths'],\r\n                datasets: [{\r\n                    label : 'People',\r\n                    backgroundColor:[\r\n                        'rgba(0, 0,255, 0.5)',\r\n                        'rgba(0, 255,0, 0.5)',\r\n                        'rgba(255, 0,0, 0.5)',\r\n                    ],\r\n                    data : [confirmed.value , recovered.value ,deaths.value]\r\n\r\n                }]\r\n            }}\r\n            options={{\r\n                legend : {display : false},\r\n                title : {display:true , text : `Current state in ${country}`}\r\n            }} \r\n            >\r\n\r\n            </Bar>\r\n        ) : null\r\n    )\r\n    return (\r\n        <div className={Styles.container}>\r\n            {country ? barchart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chart;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react'\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport styles from './App.module.css'\r\nimport { fetchdata } from './api';\r\nimport coronaImage from './img/image.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchdata();\r\n        this.setState({ data: fetchedData })\r\n    }\r\n\r\n    handlecountrychange = async (country) => {\r\n        const fetchedData = await fetchdata(country);\r\n        this.setState({ data: fetchedData, country: country })\r\n\r\n    }\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n\r\n            <div className={styles.container} >\r\n            <img className = {styles.img} Src= {coronaImage} alt = \"COVID-19\"></img>\r\n                <Cards data={data} />\r\n                <CountryPicker handlecountrychange={this.handlecountrychange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2b3Du\",\"img\":\"App_img__OK0lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2btd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2QYPw\"};"],"sourceRoot":""}